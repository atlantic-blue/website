name: Deploy

on:
  push:
    branches:
      - main
    # paths:
      # - 'packages/www-lambda/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      TERRAFORM_AWS_ACCESS_KEY_ID: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
      TERRAFORM_AWS_SECRET_ACCESS_KEY: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
      MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: INSTALL
        run: |
          cd infrastructure/www/www-lambda && npm ci

      - name: ADD BROWSER ENV VARS
        run: |
          cd infrastructure/www/www-lambda

          echo "
          MIXPANEL_TOKEN=$MIXPANEL_TOKEN
          " > .env

      - name: BUILD BROWSER AND SERVER
        run: |
          cd infrastructure/www/www-lambda && npm run build

      - name: DEPLOY BROWSER BUILD
        run: |
          cd infrastructure/www/www-lambda/dist
          aws --version
          aws s3 sync . s3://$AWS_S3_BUCKET

      - name: Checkout
        uses: actions/checkout@v2
      - name: TERRAFORM INSTALL
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update > /dev/null && sudo apt install -y terraform > /dev/null

          terraform version

      - name: AWS CONFIGURE
        run: |
          aws --version

          mkdir -p ~/.aws
          touch ~/.aws/credentials

          aws configure set aws_access_key_id ${TERRAFORM_AWS_ACCESS_KEY_ID} --profile atlantic-blue-infra
          aws configure set aws_secret_access_key ${TERRAFORM_AWS_SECRET_ACCESS_KEY} --profile atlantic-blue-infra

      - name: TERRAFORM INIT
        run: |
          cd infrastructure/www
          terraform init

      - name: TERRAFORM apply
        run: |
          cd infrastructure/www
          terraform plan